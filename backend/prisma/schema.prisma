// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sectors {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  amountTrays    Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  workstations   Workstations[]
  paths          Paths[]
  defectivePaths DefectivePaths[]

  @@map("sectors")
}

model Workstations {
  id   Int    @id @default(autoincrement())
  name String

  sectorName String
  sector     Sectors @relation(fields: [sectorName], references: [name])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  paths          Paths[]
  defectivePaths DefectivePaths[]

  @@map("workstations")
}

model Users {
  id        String   @id @default(uuid())
  name      String
  surname   String?
  password  String
  avatar    String?
  email     String   @unique
  isManager Boolean  @default(false)
  createdAt DateTime @default(now()) @updatedAt
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Products {
  SN        String   @id
  createdAt DateTime
  paths     Paths[]

  @@map("products")
}

model DefectiveProducts {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime
  defectivePaths DefectivePaths[]

  @@map("defective_products")
}

model Paths {
  id           Int           @id @default(autoincrement())
  stationId    Int?
  workStation  Workstations? @relation(fields: [stationId], references: [id])
  sectorName   String?
  Sectors      Sectors?      @relation(fields: [sectorName], references: [name])
  prodSN       String
  product      Products      @relation(fields: [prodSN], references: [SN])
  registeredAt DateTime

  @@map("paths")
}

model DefectivePaths {
  id               Int               @id @default(autoincrement())
  stationId        Int?
  workStation      Workstations?     @relation(fields: [stationId], references: [id])
  defProdId        Int
  defectiveProduct DefectiveProducts @relation(fields: [defProdId], references: [id])
  sectorName       String?
  Sectors          Sectors?          @relation(fields: [sectorName], references: [name])
  registeredAt     DateTime

  @@map("defective_paths")
}
